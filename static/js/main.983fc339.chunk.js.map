{"version":3,"sources":["actions.js","Main.js","Filter.js","App.js","registerServiceWorker.js","reducer.js","index.js"],"names":["filterCafes","cafesFiltered","cafesRaw","type","Main","props","markerRefs","this","addMarkerRefs","window","gm_authFailure","onGmError","role","GmError","google","zoom","startingPosition","className","initialCenter","lat","lng","style","width","height","position","map","cafe","index","onClick","onMarkerClick","key","name","title","address","category","ref","icon","url","size","maps","Size","marker","activeMarker","visible","showingInfoWindow","selectedPlace","Component","MyWrapper","GoogleApiWrapper","apiKey","connect","state","dispatch","e","console","log","Filter","localCafesFiltered","query","localCafesRaw","placeholder","onChange","event","updateQuery","target","value","FsError","cafes","App","filter","toLowerCase","indexOf","Array","aria-label","tabIndex","aria-pressed","forEach","onKeyPress","initCafes","appInstance","$","ajax","dataType","xhrFields","withCredentials","success","data","response","groups","items","venue","location","id","categories","error","onFsError","loadingElement","containerElement","mapElement","React","PureComponent","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","initialState","rootReducer","action","Object","assign","store","createStore","applyMiddleware","logger","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.983fc339.chunk.js","sourcesContent":["export function initCafes(cafes) {\n  console.log(cafes);\n  return {\n    type: \"INIT_CAFES\",\n    cafes\n  }\n}\n\nexport function updateQuery(query) {\n  return {\n    type: \"UPDATE_QUERY\",\n    query\n  }\n}\n\nexport function onMarkerClick(cafe, marker, e) {\n  return {\n    type: \"ON_MARKER_CLICK\",\n    activeMarker: marker,\n    showingInfoWindow: true,\n    selectedPlace: {name: cafe.name, address: marker.address, category: marker.category}\n  }\n}\n\nexport function filterCafes(cafesFiltered, cafesRaw) {\n  return {\n    type: \"FILTER_CAFES\",\n    cafesFiltered,\n    cafesRaw\n  }\n}\n\nexport function addMarkerRefs(markerRefs) {\n  console.log(markerRefs);\n  return {\n    type: \"ADD_MARKERREFS\",\n    markerRefs\n  }\n}\n\nexport function onFsError() {\n  return {\n    type: \"ON_FS_ERROR\",\n    FsError: true\n  }\n}\n\nexport function onGmError() {\n  return {\n    type: \"ON_GM_ERROR\",\n    GmError: true\n  }\n}\n","import React, { Component } from 'react';\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport { connect } from 'react-redux';\nimport { onMarkerClick, addMarkerRefs, onGmError } from './actions.js'\n\nclass Main extends Component {\n\n  componentDidMount() {\n    this.props.addMarkerRefs(this.markerRefs);\n    window.gm_authFailure = () => {\n      this.props.onGmError();\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.markerRefs = [];\n  }\n\n  render() {\n    const style = {\n      width: '100%',\n      height: '100%',\n      position: 'relative'\n    }\n\n    return (\n      <div role=\"Application\">\n      { this.props.GmError === false ? (\n       <Map google={this.props.google}\n            zoom={this.props.startingPosition.zoom}\n            className={'map'}\n            initialCenter={{\n              lat: this.props.startingPosition.lat,\n              lng: this.props.startingPosition.lng\n            }}\n            style={style}\n            >\n         {this.props.cafesRaw.map((cafe, index) => (\n           <Marker onClick={this.props.onMarkerClick}\n                   key={cafe.name}\n                   name={cafe.name}\n                   title={cafe.name}\n                   address={cafe.address}\n                   category={cafe.category}\n                   ref={(ref) => this.markerRefs[index] = ref}\n                   position={{lat: cafe.lat, lng: cafe.lng}}\n                   icon={{\n                     url: 'http://maps.google.com/mapfiles/ms/icons/blue.png',\n                     size: new this.props.google.maps.Size(32,32)\n                   }}\n                />\n         ))}\n         <InfoWindow\n           marker={this.props.activeMarker}\n           visible={this.props.showingInfoWindow}>\n             <div className=\"info-window\">\n               <div className=\"info-window--text\">{this.props.selectedPlace.name}</div>\n               <div className=\"info-window--text--extra\">{`Address: ${this.props.selectedPlace.address}`}</div>\n               <div className=\"info-window--text--extra\">{`Category: ${this.props.selectedPlace.category}`}</div>\n             </div>\n         </InfoWindow>\n       </Map> ) : (<h6 className=\"msg--error\">Couldn't get response from Google API. Please try refreshing site</h6>)}\n      </div>\n   );\n }\n}\n\nconst mapStateToProps = state => {\n  return {\n    startingPosition: state.startingPosition,\n    showingInfoWindow: state.showingInfoWindow,\n    activeMarker: state.activeMarker,\n    selectedPlace: state.selectedPlace,\n    cafesRaw: state.cafesRaw,\n    GmError: state.GmError\n    }\n  }\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onMarkerClick: (cafe, marker, e) => dispatch(onMarkerClick(cafe, marker, e)),\n    addMarkerRefs: markerRefs => dispatch(addMarkerRefs(markerRefs)),\n    onGmError: () => dispatch(onGmError())\n  }\n}\nconst MyWrapper = GoogleApiWrapper({\n apiKey: (\"AIzaSyCJTF1H_9xKdjSbmBkFz96KPCRRPaJfgQ0\")\n})(Main)\nexport default connect(mapStateToProps, mapDispatchToProps)(MyWrapper)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateQuery, filterCafes } from './actions.js'\n\nclass Filter extends Component {\n\n  componentDidMount() {\n    this.props.filterCafes(this.props.localCafesFiltered(this.props.query), this.props.localCafesRaw(this.props.query))\n  }\n\n  render() {\n\n    return (\n      <div className=\"filter\">\n        <input type=\"text\"\n          placeholder=\"Search for Cafes...\"\n          className=\"filter-input\"\n          onChange={(event) => {\n            this.props.updateQuery(event.target.value);\n            this.props.filterCafes(this.props.localCafesFiltered(event.target.value), this.props.localCafesRaw(event.target.value))\n            }\n          } />\n        {(this.props.FsError === false) ? this.props.cafesFiltered : (<h6 className=\"msg--error\">Couldn't get response to query. Please try refreshing site</h6>)}\n        <p className=\"msg\">Application uses Foursquare API!</p>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    cafes: state.cafes,\n    query: state.query,\n    cafesFiltered: state.cafesFiltered,\n    FsError: state.FsError\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateQuery: query => dispatch(updateQuery(query)),\n    filterCafes: (cafesFiltered, cafesRaw) => dispatch(filterCafes(cafesFiltered, cafesRaw))\n  }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from 'react';\nimport Main from './Main.js'\nimport Filter from './Filter.js'\nimport { connect } from 'react-redux';\nimport './App.css';\nimport { initCafes, filterCafes, onFsError } from './actions.js'\nimport $ from \"jquery\";\n\nclass App extends React.PureComponent {\n\n  componentDidMount() {\n    this.initCafes();\n  }\n\n  localCafesRaw = (query) => {\n    let cafesRaw = this.props.cafes.filter(\n      (cafe) => {\n        return cafe.name.toLowerCase().indexOf(query.toLowerCase()) !== -1;\n      }\n    );\n    return cafesRaw\n  }\n\n  localCafesFiltered = (query) => {\n    let cafesFiltered = this.props.cafes.filter(\n      (cafe) => {\n        return cafe.name.toLowerCase().indexOf(query.toLowerCase()) !== -1;\n      }\n    );\n\n    if(this.props.cafes instanceof Array) {\n      cafesFiltered = (\n        <ol className=\"filter-list\">\n          {cafesFiltered.map((cafe) => (\n            <li key={cafe.name} lat={cafe.lat} lng={cafe.lng} aria-label={cafe.name} className=\"filter-list-item\" tabIndex={0} role=\"button\" aria-pressed=\"false\"\n              onClick={(event) => {\n                this.props.markerRefs.forEach((marker) => {\n                  if(marker){\n                    if(cafe.name === marker.props.title) {\n                      marker.props.onClick({name: marker.props.name}, marker.marker)\n                    }\n                  }\n                })\n              }}\n\n              onKeyPress={(event) => {\n                if(event.key === 'Enter'){\n                  this.props.markerRefs.forEach((marker) => {\n                    if(marker){\n                      if(cafe.name === marker.props.title) {\n                        marker.props.onClick({name: marker.props.name}, marker.marker)\n                      }\n                    }\n                  })\n                }\n              }}>\n              {cafe.name}\n            </li>\n          ))}\n        </ol>\n      )\n    }\n    return cafesFiltered\n  }\n\n  initCafes = () => {\n    let clientID = 'REY4XZ5WQ1CNVSH52G2UJ3DYUVOW5A5PVHADYUGGIV5TLDWE'\n    let clientSecret = 'LMR253UHYAPDUFJ0NV0TRFRHEQ2AEZG4A30BPCCQAWYIQDND'\n    const appInstance = this\n\n    let url = `https://api.foursquare.com/v2/venues/explore?client_id=${clientID}&client_secret=${clientSecret}&v=20180323&near=Gdynia&limit=10&query=coffee`\n    $.ajax({\n      url: url,\n      dataType: 'json',\n      xhrFields: {\n        withCredentials: false\n      },\n      success: function(data) {\n        const cafes = data.response.groups[0].items.map((cafe, index) => {\n          return {name: cafe.venue.name, lat: cafe.venue.location.lat, lng: cafe.venue.location.lng, id: cafe.venue.id, category: cafe.venue.categories[0].name, address: cafe.venue.location.address}\n        })\n\n        appInstance.props.initCafes(cafes);\n        appInstance.props.filterCafes(appInstance.localCafesFiltered(appInstance.props.query), appInstance.localCafesRaw(appInstance.props.query));\n      },\n      error: () => {\n        this.props.onFsError();\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Filter\n          localCafesRaw={this.localCafesRaw}\n          localCafesFiltered={this.localCafesFiltered}\n        />\n        <Main\n          loadingElement={<div style={{ height: `100%` }} />}\n          containerElement={<div style={{ height: `400px` }} />}\n          mapElement={<div style={{ height: `100%` }} />}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    cafes: state.cafes,\n    query: state.query,\n    cafesFiltered: state.cafesFiltered,\n    markerRefs: state.markerRefs\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    initCafes: cafes => dispatch(initCafes(cafes)),\n    filterCafes: (cafesFiltered, cafesRaw) => dispatch(filterCafes(cafesFiltered, cafesRaw)),\n    onFsError: () => dispatch(onFsError())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n  startingPosition: { lat: 54.5193926,lng: 18.5353235, zoom: 14.95},\n  cafes: [], //all cafes from request\n  cafesRaw: [], //just objects\n  cafesFiltered: [], //jsx elements\n  query: '',\n  showingInfoWindow: false, //Infowindow\n  activeMarker: {}, //Infowindow\n  selectedPlace: {}, //Infowindow\n  markerRefs: [], //all refs to markers\n  FsError: false,\n  GmError: false\n}\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"INIT_CAFES\":\n      return Object.assign({}, state, {\n        cafes: action.cafes\n    })\n    case \"UPDATE_QUERY\":\n      return Object.assign({}, state, {\n        query: action.query\n    })\n    case \"ON_MARKER_CLICK\":\n      return Object.assign({}, state, {\n        showingInfoWindow: action.showingInfoWindow,\n        activeMarker: action.activeMarker,\n        selectedPlace: action.selectedPlace\n    })\n    case \"FILTER_CAFES\":\n      return Object.assign({}, state, {\n        cafesFiltered: action.cafesFiltered,\n        cafesRaw: action.cafesRaw\n     })\n     case \"ADD_MARKERREFS\":\n        return Object.assign({}, state, {\n          markerRefs: action.markerRefs\n     })\n     case \"ON_FS_ERROR\":\n        return Object.assign({}, state, {\n          FsError: action.FsError\n     })\n     case \"ON_GM_ERROR\":\n        return Object.assign({}, state, {\n          GmError: action.GmError\n     })\n    default:\n      return state\n  }\n}\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from './reducer.js';\nimport { logger } from 'redux-logger';\n\nconst store = createStore(rootReducer, applyMiddleware(logger));\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nregisterServiceWorker();\n\nexport default store;\n"],"sourceRoot":""}